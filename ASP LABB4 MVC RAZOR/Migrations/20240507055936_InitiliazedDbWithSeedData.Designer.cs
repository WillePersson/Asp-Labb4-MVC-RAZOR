// <auto-generated />
using System;
using ASP_LABB4_MVC_RAZOR.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASP_LABB4_MVC_RAZOR.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240507055936_InitiliazedDbWithSeedData")]
    partial class InitiliazedDbWithSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Genevieve Crownson",
                            Title = "Shadows Over Bregdan"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Sylvia Greystone",
                            Title = "The Azure Stone"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Randall Thomas",
                            Title = "River of Secrets"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Clara Wood",
                            Title = "Mysteries of Greenfield"
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Phillip Rowley",
                            Title = "Guardians of Lore"
                        },
                        new
                        {
                            BookId = 6,
                            Author = "Edward Lance",
                            Title = "The Last Heir"
                        },
                        new
                        {
                            BookId = 7,
                            Author = "Mara Lynn",
                            Title = "The Crystal Duel"
                        },
                        new
                        {
                            BookId = 8,
                            Author = "Derek Shimmer",
                            Title = "Twilight's Game"
                        },
                        new
                        {
                            BookId = 9,
                            Author = "Eliza Mortin",
                            Title = "Whispers of Yesterday"
                        },
                        new
                        {
                            BookId = 10,
                            Author = "Rachel Forge",
                            Title = "Crown of Echoes"
                        });
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 4, 27, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6369)
                        },
                        new
                        {
                            LoanId = 2,
                            BookId = 3,
                            CustomerId = 1,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 4, 29, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6406)
                        },
                        new
                        {
                            LoanId = 3,
                            BookId = 2,
                            CustomerId = 2,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 1, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6408)
                        },
                        new
                        {
                            LoanId = 4,
                            BookId = 4,
                            CustomerId = 2,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 4, 30, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6410)
                        },
                        new
                        {
                            LoanId = 5,
                            BookId = 5,
                            CustomerId = 3,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 2, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6412)
                        },
                        new
                        {
                            LoanId = 6,
                            BookId = 6,
                            CustomerId = 4,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 3, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6413)
                        },
                        new
                        {
                            LoanId = 7,
                            BookId = 7,
                            CustomerId = 4,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 4, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6415)
                        },
                        new
                        {
                            LoanId = 8,
                            BookId = 8,
                            CustomerId = 5,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 5, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6417)
                        },
                        new
                        {
                            LoanId = 9,
                            BookId = 9,
                            CustomerId = 5,
                            IsReturned = false,
                            LoanDate = new DateTime(2024, 5, 6, 7, 59, 36, 702, DateTimeKind.Local).AddTicks(6419)
                        });
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Customer", b =>
                {
                    b.HasBaseType("ASP_LABB4_MVC_RAZOR.Models.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasDiscriminator().HasValue("Customer");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "pass1",
                            Username = "user1",
                            Address = "123 Lane",
                            Email = "emma.thomas@example.com",
                            Name = "Emma Thomas",
                            PhoneNumber = "111-222-3333"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "pass2",
                            Username = "user2",
                            Address = "124 Lane",
                            Email = "liam.johnson@example.com",
                            Name = "Liam Johnson",
                            PhoneNumber = "222-333-4444"
                        },
                        new
                        {
                            UserId = 3,
                            Password = "pass3",
                            Username = "user3",
                            Address = "125 Lane",
                            Email = "olivia.williams@example.com",
                            Name = "Olivia Williams",
                            PhoneNumber = "333-444-5555"
                        },
                        new
                        {
                            UserId = 4,
                            Password = "pass4",
                            Username = "user4",
                            Address = "126 Lane",
                            Email = "noah.jones@example.com",
                            Name = "Noah Jones",
                            PhoneNumber = "444-555-6666"
                        },
                        new
                        {
                            UserId = 5,
                            Password = "pass5",
                            Username = "user5",
                            Address = "127 Lane",
                            Email = "sophia.brown@example.com",
                            Name = "Sophia Brown",
                            PhoneNumber = "555-666-7777"
                        });
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.YourNamespace.Models.Admin", b =>
                {
                    b.HasBaseType("ASP_LABB4_MVC_RAZOR.Models.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Users", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("Admin_Name");
                        });

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            UserId = 6,
                            Password = "admin123",
                            Username = "admin",
                            Name = "Super Admin"
                        });
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Loan", b =>
                {
                    b.HasOne("ASP_LABB4_MVC_RAZOR.Models.Book", "Book")
                        .WithMany("Loans")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_LABB4_MVC_RAZOR.Models.Customer", "Customer")
                        .WithMany("Loans")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Book", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("ASP_LABB4_MVC_RAZOR.Models.Customer", b =>
                {
                    b.Navigation("Loans");
                });
#pragma warning restore 612, 618
        }
    }
}
